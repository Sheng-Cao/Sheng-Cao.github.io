{"version":3,"sources":["sw.js"],"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","respondWith","match","request","response","fetch","fetchRequest","clone","status","type","responseToCache","put"],"mappings":";AAAA,IAAIA,EAAa,uBACbC,EAAc,CAChB,IACA,sBACA,uBACA,qBACA,0BAGFC,KAAKC,iBAAiB,UAAW,SAASC,GAExCA,EAAMC,UACJC,OAAOC,KAAKP,GAAYQ,KAAK,SAASC,GAE7BA,OADPC,QAAQC,IAAI,gBACLF,EAAMG,OAAOX,QAK1BC,KAAKC,iBAAiB,QAAS,SAASC,GACtCA,EAAMS,YACJP,OAAOQ,MAAMV,EAAMW,SAASP,KAAK,SAASQ,GAEpCA,OAAAA,GAGGC,MAAMb,EAAMW,cAKzBb,KAAKC,iBAAiB,QAAS,SAASC,GACtCA,EAAMS,YACJP,OAAOQ,MAAMV,EAAMW,SAASP,KAAK,SAASQ,GAEpCA,GAAAA,EACKA,OAAAA,EAOLE,IAAAA,EAAed,EAAMW,QAAQI,QAE1BF,OAAAA,MAAMC,GAAcV,KAAK,SAASQ,GAEnC,IAACA,GAAgC,MAApBA,EAASI,QAAoC,UAAlBJ,EAASK,KAC5CL,OAAAA,EAOLM,IAAAA,EAAkBN,EAASG,QAMxBH,OAJPV,OAAOC,KAAKP,GAAYQ,KAAK,SAASC,GACpCA,EAAMc,IAAInB,EAAMW,QAASO,KAGpBN","file":"sw.map","sourceRoot":"src","sourcesContent":["var CACHE_NAME = \"teomrd-site-cache-v1\";\nvar urlsToCache = [\n  \"/\",\n  \"assets/css/main.css\",\n  \"assets/css/print.css\",\n  \"assets/js/index.js\",\n  \"images/miroFavicon.png\"\n];\n\nself.addEventListener(\"install\", function(event) {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(function(cache) {\n      console.log(\"Opened cache\");\n      return cache.addAll(urlsToCache);\n    })\n  );\n});\n\nself.addEventListener(\"fetch\", function(event) {\n  event.respondWith(\n    caches.match(event.request).then(function(response) {\n      // Cache hit - return response\n      if (response) {\n        return response;\n      }\n      return fetch(event.request);\n    })\n  );\n});\n\nself.addEventListener(\"fetch\", function(event) {\n  event.respondWith(\n    caches.match(event.request).then(function(response) {\n      // Cache hit - return response\n      if (response) {\n        return response;\n      }\n\n      // IMPORTANT: Clone the request. A request is a stream and\n      // can only be consumed once. Since we are consuming this\n      // once by cache and once by the browser for fetch, we need\n      // to clone the response.\n      var fetchRequest = event.request.clone();\n\n      return fetch(fetchRequest).then(function(response) {\n        // Check if we received a valid response\n        if (!response || response.status !== 200 || response.type !== \"basic\") {\n          return response;\n        }\n\n        // IMPORTANT: Clone the response. A response is a stream\n        // and because we want the browser to consume the response\n        // as well as the cache consuming the response, we need\n        // to clone it so we have two streams.\n        var responseToCache = response.clone();\n\n        caches.open(CACHE_NAME).then(function(cache) {\n          cache.put(event.request, responseToCache);\n        });\n\n        return response;\n      });\n    })\n  );\n});\n"]}